{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Abdullah\\\\Desktop\\\\PROSHOP\\\\frontend\\\\src\\\\screen\\\\ShippingScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { saveShippingAddress } from '../actions/cartActions';\nimport Meta from '../components/Meta';\n\nconst ShippingScreen = ({\n  history\n}) => {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    }\n  });\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({\n      address,\n      city,\n      postalCode,\n      country\n    }));\n    history.push('/payment');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Meta, {\n      title: \"Shipping\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n        step1: true,\n        step2: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shipping\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"address\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Address\",\n            value: address,\n            onChange: e => setAddress(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"city\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter City\",\n            value: city,\n            onChange: e => setCity(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"postalCode\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Postal Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Postal Code\",\n            value: postalCode,\n            onChange: e => setPostalCode(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"country\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Country\",\n            value: country,\n            onChange: e => setCountry(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ShippingScreen, \"SB54Q6ngS3pheagWCarYrPv0m4c=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ShippingScreen;\nexport default ShippingScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingScreen\");","map":{"version":3,"sources":["C:/Users/Abdullah/Desktop/PROSHOP/frontend/src/screen/ShippingScreen.js"],"names":["React","useState","useEffect","Form","Button","useDispatch","useSelector","FormContainer","CheckoutSteps","saveShippingAddress","Meta","ShippingScreen","history","cart","state","shippingAddress","userLogin","userInfo","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","dispatch","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\nimport Meta from '../components/Meta';\r\n\r\n\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n    })\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n    return (\r\n        <>\r\n        <Meta title='Shipping' />\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control \r\n                        type='text' \r\n                        placeholder='Enter Address'\r\n                        value={address}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                <Form.Group controlId='city'>\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control \r\n                        type='text' \r\n                        placeholder='Enter City'\r\n                        value={city}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                <Form.Group controlId='postalCode'>\r\n                        <Form.Label>Postal Code</Form.Label>\r\n                        <Form.Control \r\n                        type='text' \r\n                        placeholder='Enter Postal Code'\r\n                        value={postalCode}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                <Form.Group controlId='country'>\r\n                        <Form.Label>Country</Form.Label>\r\n                        <Form.Control \r\n                        type='text' \r\n                        placeholder='Enter Country'\r\n                        value={country}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type='submit'>\r\n                        Continue\r\n                    </Button>\r\n            </Form>\r\n        </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen;\r\n"]},"metadata":{},"sourceType":"module"}