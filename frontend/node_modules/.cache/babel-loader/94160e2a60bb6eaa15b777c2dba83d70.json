{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { orderCreateReducer } from './reducers/orderReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer\n});\nconst cartItemsFromStrorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStrorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStrorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst paymentMethodFromStrorage = localStorage.getItem('paymentmethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStrorage,\n    shippingAddress: shippingAddressFromStrorage,\n    paymentmethod: paymentMethodFromStrorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStrorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Abdullah/Desktop/PROSHOP/Frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","orderCreateReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","cartItemsFromStrorage","localStorage","getItem","JSON","parse","userInfoFromStrorage","shippingAddressFromStrorage","paymentMethodFromStrorage","initialState","cartItems","shippingAddress","paymentmethod","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACIC,kBADJ,EAEIC,qBAFJ,QAGO,4BAHP;AAIA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,kBAAT,QAAmC,0BAAnC;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAAgDC,kBAAhD,EAAoEC,wBAApE,QAAoG,yBAApG;AAIA,MAAMC,OAAO,GAAGZ,eAAe,CAAC;AAC5Ba,EAAAA,WAAW,EAAET,kBADe;AAE5BU,EAAAA,cAAc,EAAET,qBAFY;AAG5BU,EAAAA,IAAI,EAAET,WAHsB;AAI5BU,EAAAA,SAAS,EAAER,gBAJiB;AAK5BS,EAAAA,YAAY,EAAER,mBALc;AAM5BS,EAAAA,WAAW,EAAER,kBANe;AAO5BS,EAAAA,iBAAiB,EAAER,wBAPS;AAQ5BS,EAAAA,WAAW,EAAEb;AARe,CAAD,CAA/B;AAYA,MAAMc,qBAAqB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAC5BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAD4B,GAE5B,EAFF;AAKA,MAAMG,oBAAoB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC3BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD2B,GAE3B,IAFF;AAIA,MAAMI,2BAA2B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAClCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADkC,GAElC,EAFF;AAGA,MAAMK,yBAAyB,GAAGN,YAAY,CAACC,OAAb,CAAqB,eAArB,IAChCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,CADgC,GAEhC,EAFF;AAKA,MAAMM,YAAY,GAAG;AACjBd,EAAAA,IAAI,EAAE;AAAEe,IAAAA,SAAS,EAAET,qBAAb;AAAoCU,IAAAA,eAAe,EAAEJ,2BAArD;AAAkFK,IAAAA,aAAa,EAAEJ;AAAjG,GADW;AAEjBZ,EAAAA,SAAS,EAAE;AAAEiB,IAAAA,QAAQ,EAAEP;AAAZ;AAFM,CAArB;AAKA,MAAMQ,UAAU,GAAG,CAAChC,KAAD,CAAnB;AAEA,MAAMiC,KAAK,GAAGpC,WAAW,CACrBa,OADqB,EAErBiB,YAFqB,EAGrB1B,mBAAmB,CAACF,eAAe,CAAC,GAAGiC,UAAJ,CAAhB,CAHE,CAAzB;AAOA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { \r\n    productListReducer,\r\n    productDetailsReducer\r\n} from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { orderCreateReducer } from './reducers/orderReducers';\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducers';\r\n\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate: orderCreateReducer,\r\n})\r\n\r\n\r\nconst cartItemsFromStrorage = localStorage.getItem('cartItems') \r\n? JSON.parse(localStorage.getItem('cartItems')) \r\n: []\r\n\r\n\r\nconst userInfoFromStrorage = localStorage.getItem('userInfo') \r\n? JSON.parse(localStorage.getItem('userInfo')) \r\n: null\r\n\r\nconst shippingAddressFromStrorage = localStorage.getItem('shippingAddress') \r\n? JSON.parse(localStorage.getItem('shippingAddress')) \r\n: {}\r\nconst paymentMethodFromStrorage = localStorage.getItem('paymentmethod') \r\n? JSON.parse(localStorage.getItem('paymentMethod')) \r\n: {}\r\n\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStrorage, shippingAddress: shippingAddressFromStrorage, paymentmethod: paymentMethodFromStrorage },\r\n    userLogin: { userInfo: userInfoFromStrorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer, \r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}