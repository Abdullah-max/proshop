{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Abdullah\\\\Desktop\\\\PROSHOP\\\\frontend\\\\src\\\\screen\\\\PaymentScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { savePaymentMethod } from '../actions/cartActions';\nimport Meta from '../components/Meta';\n\nconst PaymentScreen = ({\n  history\n}) => {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  const [paymentMethod, setPaymentMethod] = useState('PayPal');\n\n  if (!shippingAddress) {\n    history.push('/shipping');\n  }\n\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push('/placeorder');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Meta, {\n      title: \"Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n        step1: true,\n        step2: true,\n        step3: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            as: \"legend\",\n            children: \"Select Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              label: \"PayPal or credit card\",\n              id: \"PayPal\",\n              name: \"paymentMethod\",\n              value: \"PayPal\",\n              checked: true,\n              onChange: e => setPaymentMethod(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PaymentScreen, \"C3zfDrTnxu/+7HkdbMrRpsb2LjA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PaymentScreen;\nexport default PaymentScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentScreen\");","map":{"version":3,"sources":["C:/Users/Abdullah/Desktop/PROSHOP/frontend/src/screen/PaymentScreen.js"],"names":["React","useState","Form","Button","Col","useDispatch","useSelector","FormContainer","CheckoutSteps","savePaymentMethod","Meta","PaymentScreen","history","cart","state","shippingAddress","paymentMethod","setPaymentMethod","push","dispatch","submitHandler","e","preventDefault","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,QAAkC,iBAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACnC,QAAMC,IAAI,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAsBF,IAA5B;AAEA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,QAAD,CAAlD;;AACA,MAAG,CAACc,eAAJ,EAAoB;AAChBH,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACH;;AAED,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;;AACA,QAAMe,aAAa,GAAIC,CAAD,IAAM;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,QAAQ,CAACV,iBAAiB,CAACO,aAAD,CAAlB,CAAR;AACAJ,IAAAA,OAAO,CAACM,IAAR,CAAa,aAAb;AACH,GAJD;;AAKA,sBACI;AAAA,4BACA,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,aAAD;AAAA,8BACI,QAAC,aAAD;AAAe,QAAA,KAAK,MAApB;AAAqB,QAAA,KAAK,MAA1B;AAA2B,QAAA,KAAK;AAAhC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEE,aAAhB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,EAAE,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAGA,QAAC,GAAD;AAAA,mCACI,QAAC,IAAD,CAAM,KAAN;AACI,cAAA,IAAI,EAAC,OADT;AAEI,cAAA,KAAK,EAAC,uBAFV;AAGI,cAAA,EAAE,EAAC,QAHP;AAII,cAAA,IAAI,EAAC,eAJT;AAKI,cAAA,KAAK,EAAC,QALV;AAMI,cAAA,OAAO,MANX;AAOI,cAAA,QAAQ,EAAGC,CAAD,IAAMJ,gBAAgB,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV;AAPpC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAgBQ,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBR;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AA6BH,CA5CD;;GAAMb,a;UACWL,W,EAQID,W;;;KATfM,a;AA8CN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\nimport Meta from '../components/Meta';\r\n\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n    if(!shippingAddress){\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n    return (\r\n        <>\r\n        <Meta title='Payment' />\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                \r\n                <Col>\r\n                    <Form.Check \r\n                        type='radio'\r\n                        label='PayPal or credit card'\r\n                        id='PayPal'\r\n                        name='paymentMethod'\r\n                        value='PayPal'\r\n                        checked\r\n                        onChange={(e)=> setPaymentMethod(e.target.value)}\r\n                    ></Form.Check>\r\n                </Col>\r\n                </Form.Group>\r\n                    <Button type='submit'>\r\n                        Continue\r\n                    </Button>\r\n            </Form>\r\n        </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n"]},"metadata":{},"sourceType":"module"}